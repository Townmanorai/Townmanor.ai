# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI for React

on:
  push:
    branches:
      - "main"  # This triggers the workflow on push to the "main" branch

jobs:
  build:
    runs-on: self-hosted  # You can change to "ubuntu-latest" or another runner if needed

    strategy:
      matrix:
        node-version: [20.x]  # You can add more versions if needed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  # Fetch the code from your GitHub repository

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci  # Installs all dependencies listed in package-lock.json

    - name: Run build
      run: npm run build  # Generates the production-ready build files (e.g., in the "dist" folder)

    - name: Set file permissions for dist folder (if it exists)
      run: |
        if [ -d "./dist" ]; then
          sudo chown -R $USER:$USER ./dist
          sudo chmod -R 777 ./dist
        fi

    - name: Archive build artifacts (optional)
      uses: actions/upload-artifact@v4
      with:
        name: react-build
        path: ./dist  # Upload the build artifacts for further steps (e.g., for deployment)

    - name: Clean dist folder (optional)
      run: |
        if [ -d "./dist" ]; then
          sudo rm -rf ./dist/*
        fi

    - name: Build project again (optional)
      run: npm run build  # Rebuilds the project, if needed (in case of cleaning)
